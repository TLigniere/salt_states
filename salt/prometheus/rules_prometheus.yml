groups:
 - name: test
   rules:

# Trigger if any exporters job stops, the hosts itself may still work
   - alert: InstanceDown
     expr: up == 0
     for: 1m
     annotations:
       summary: "Hosts are down / unreachable (instance {{ $labels.instance }})"


# Exists for the whole purpose of telling me that the MON server is still running
   - alert: InstanceUp
     expr: up{hostname="MON-server-Prometheus", instance="localhost:9090", job="prometheus"} == 1
     for: 1m
     annotations:
       summary: "Hosts are up (instance {{ $labels.instance }})"

# Tells if an host has under 25% percent of RAM available
   - alert: Host_Out_Of_RAM
     expr: node_memory_MemAvailable / node_memory_MemTotal * 100 < 25
     for: 5m
     labels:
       severity: warning
     annotations:
       summary: "Host out of memory (instance {{ $labels.instance }})"
       description: "Node memory is filling up (< 25% left)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

# Tells if an host has under 50% percent of disk space available
   - alert: Host_Out_Of_Disk_Space
     expr: (node_filesystem_avail{mountpoint="/"}  * 100) / node_filesystem_size{mountpoint="/"} < 50
     for: 1s
     labels:
       severity: warning
     annotations:
       summary: "Host out of disk space (instance {{ $labels.instance }})"
       description: "Disk is almost full (< 50% left)\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

# Tells if an host use 80% of his total CPU power
   - alert: Host_High_Cpu_Load
     expr: (sum by (instance) (irate(node_cpu{job="node_exporter_metrics",mode="idle"}[5m]))) > 80
     for: 5m
     labels:
       severity: warning
     annotations:
       summary: "Host high CPU load (instance {{ $labels.instance }})"
       description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

# Trigger if the principal WP server is down
   - alert: 1st_WP_Service_DOWN
     expr: node_systemd_unit_state{hostname="WP-server-Node_exporter",name="apache2.service",state="active"}==0
     for: 1m
     annotations:
       summary: "Wordpress service is down on (instance {{ $labels.instance }})"

# Trigger if the secondary WP server is down
   - alert: 2nd_WP_Service_DOWN
     expr: node_systemd_unit_state{hostname="WP2-server-Node_exporter",name="apache2.service",state="active"}==0
     for: 1m
     annotations:
       summary: "Wordpress service is down on (instance {{ $labels.instance }})"

# Trigger if the principal DB server is down
   - alert: 1st_MariaDB_Service_DOWN
     expr: node_systemd_unit_state{hostname="SQL-server-Node_exporter",name="mariadb.service",state="active"}==0
     for: 1m
     annotations:
       summary: "Mariadb / SQL service is down on (instance {{ $labels.instance }})" 

# Trigger if the secondary DB server is down
   - alert: 2nd_MariaDB_Service_DOWN
     expr: node_systemd_unit_state{hostname="SQL2-server-Node_exporter",name="mariadb.service",state="active"}==0
     for: 1m
     annotations:
       summary: "Mariadb / SQL service is down on (instance {{ $labels.instance }})" 

# Trigger if the HAProxy stops, in this case, no users can access to any Wordpress
   - alert: HAProxy_Service_DOWN
     expr: node_systemd_unit_state{hostname="HAP-server-Node_exporter",name="haproxy.service",state="active"}==0
     for: 1m
     annotations:
       summary: " HAProxy service is down on (instance{{ $labels.instance }})"

# Trigger if the NFS stops working, in this case, the pictures of the wordpress won't sync
   - alert: NFS_Service_DOWN
     expr: node_systemd_unit_state{hostname="LAB-server-Node_exporter",name="nfs-server.service",state="active"}==0
     for: 1m
     annotations:
       summary: "NFS service is down on (instance{{ $labels.instance }})"

# Trigger if a salt minion stop working on any instance
   - alert: Salt_minion_DOWN
     expr: node_systemd_unit_state{name="salt-minion.service",state="active"}==0
     for: 1m
     annotations:
       summary: "SALT minion is down on (instance{{ $labels.instance }})"

   - alert: PrometheusScrapeTimeout
     expr: scrape_duration_seconds>1
     for: 1s
     annotations:
       summary: "A Scrape towards (instance {{ $labels.instance }}) is taking too much time"
